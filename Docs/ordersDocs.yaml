openapi: 3.0.0
info:
  title: Orders API
  version: 1.0.0
  description: API for managing bike shop orders
tags:
  - name: Orders
    description: Order management endpoints for bikes

paths:
  /api/orders:
    post:
      summary: Create a new order
      tags: [Orders]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - bikeId
                - contactInfo
              properties:
                bikeId:
                  type: string
                  description: The ID of the bike being ordered
                  example: 64b2c1f43f8b4f4f28e34d12
                userId:
                  type: string
                  description: The ID of the user making the order (optional for guests)
                  example: 64b2c1f43f8b4f4f28e34d13
                contactInfo:
                  type: object
                  description: Contact details for the order
                  properties:
                    name:
                      type: string
                      example: John Doe
                    phone:
                      type: string
                      example: "+123456789"
                    email:
                      type: string
                      example: john@example.com
      responses:
        201:
          description: Order created successfully
        404:
          description: Bike not found
        500:
          description: Server error while making order

    get:
      summary: Get all orders
      tags: [Orders]
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of all orders
        500:
          description: Server error while fetching orders

  /api/orders/search:
    get:
      summary: Search orders by ID, username, phone, or email
      tags: [Orders]
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: searchTerm
          schema:
            type: string
          required: true
          description: Search term (order ID, customer name, phone, or email)
      responses:
        200:
          description: Orders matching search term
        400:
          description: Please provide a search term
        404:
          description: No orders found
        500:
          description: Server error while searching orders

  /api/orders/{id}:
    delete:
      summary: Delete an order by ID
      tags: [Orders]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Order ID
      responses:
        200:
          description: Order deleted successfully
        404:
          description: Order not found
        500:
          description: Server error while deleting order

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
